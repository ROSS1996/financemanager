version: '3'

services:

  database:
    image: postgres
    container_name: database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app_network
    restart: always
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_HOST_PORT}:${PGADMIN_CONTAINER_PORT}"
    depends_on:
      - database
    networks:
      - app_network
    volumes:
      - ./database/pgadmin:/var/lib/pgadmin
  server:
    build: ./server
    container_name: server
    depends_on:
      - database
    environment:
      - DB_HOST=database
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${SERVER_PORT}
      - JWT_SECRET=${SERVER_JWT_SECRET}
      - WEBSITE_ADDRESS=${WEBSITE_ADDRESS}
      - WEBSITE_PORT=${WEBSITE_PORT}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - app_network
    restart: always

  website:
    build: ./website
    container_name: website
    environment:
      - SERVER_ADDRESS=server
      - SERVER_PORT=${SERVER_PORT}
      - PORT=${WEBSITE_PORT}
      - JWT_SECRET=${WEBSITE_JWT_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    ports:
      - "${WEBSITE_PORT}:${WEBSITE_PORT}"
    networks:
      - app_network
    restart: always

networks:
  app_network:
    driver: bridge
